--- nc4file.c.original	2016-05-20 16:50:41.080146475 +0200
+++ nc4file.c	2016-05-20 17:06:59.099296022 +0200
@@ -283,6 +283,9 @@
    int persist = 0; /* Should diskless try to persist its data into file?*/
 #endif
 
+   hid_t vol_id = H5VLregister_by_name("h5-memvol"); // ESD middleware: use VOL plugin
+
+   
    assert(nc);
 
    if(cmode & NC_DISKLESS)
@@ -414,6 +417,14 @@
 					    H5P_CRT_ORDER_INDEXED)) < 0)
       BAIL(NC_EHDFERR);
 
+
+
+   /* ESD middleware set vol plugin */ // TODO: Property exists by now, otherwise NetCDF would "BAIL"
+   if (H5Pset_vol(fapl_id, vol_id, &fapl_id) < 0) // ESD middleware: use VOL plugin 
+      BAIL(NC_EHDFERR); // TODO: more sensible error code?
+
+
+
    /* Create the file. */
    if ((nc4_info->hdfid = H5Fcreate(path, flags, fcpl_id, fapl_id)) < 0)
         /*Change the return error from NC_EFILEMETADATA to
@@ -425,6 +436,8 @@
 						     H5P_DEFAULT)) < 0)
       BAIL(NC_EFILEMETA);
 
+
+
    /* Release the property lists. */
    if (H5Pclose(fapl_id) < 0 ||
        H5Pclose(fcpl_id) < 0)
@@ -2106,6 +2119,7 @@
     if (H5Pclose(pid) < 0)
 	BAIL(NC_EHDFERR);
 
+
     /* Set the iteration index to use */
     if (crt_order_flags & H5P_CRT_ORDER_TRACKED)
         iter_index = H5_INDEX_CRT_ORDER;
@@ -2201,6 +2215,8 @@
    int info_duped = 0;          /* Whether the MPI Info object was duplicated */
 #endif /* !USE_PARALLEL4 */
 
+   hid_t vol_id = H5VLregister_by_name("h5-memvol"); // ESD middleware: use VOL plugin
+
    LOG((3, "%s: path %s mode %d", __func__, path, mode));
    assert(path && nc);
 
@@ -2244,7 +2260,7 @@
 	 LOG((4, "opening parallel file with MPI/posix"));
 	 if (H5Pset_fapl_mpiposix(fapl_id, mpiinfo->comm, 0) < 0)
 	    BAIL(NC_EPARINIT);
-      }
+      }/
 #else /* USE_PARALLEL_POSIX */
       /* Should not happen! Code in NC4_create/NC4_open should alias the
        *        NC_MPIPOSIX flag to NC_MPIIO, if the MPI-POSIX VFD is not
@@ -2278,6 +2294,14 @@
 	__func__, nc4_chunk_cache_size, nc4_chunk_cache_nelems, nc4_chunk_cache_preemption));
 #endif /* USE_PARALLEL4 */
 
+   
+   
+   /* ESD middleware set vol plugin */ // TODO: Property exists by now, otherwise NetCDF would "BAIL"
+   if (H5Pset_vol(fapl_id, vol_id, &fapl_id) < 0) // ESD middleware: use VOL plugin 
+      BAIL(NC_EHDFERR); // TODO: more sensible error code?
+
+
+
    /* The NetCDF-3.x prototype contains an mode option NC_SHARE for
       multiple processes accessing the dataset concurrently.  As there
       is no HDF5 equivalent, NC_SHARE is treated as NC_NOWRITE. */
@@ -2359,6 +2383,7 @@
     * Prior to the fix, all data types were assigned
     * NC_ENDIAN_BIG, so I am preserving that here for now.
     * Not sure why it wouldn't be NC_ENDIAN_NATIVE, although
+
     * I can hazard a guess or two.
     */
 
@@ -2377,6 +2402,7 @@
        t = 6;
        break;
    case DFNT_LUINT8:
+
        *xtype = NC_UBYTE;
        t = 6;
        endianness = NC_ENDIAN_LITTLE;
